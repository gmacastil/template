apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: template-java-spring-boot-rest-api
  title: Template Spring Boot REST API v1.0
  description: Plantilla para microservicios SB3.0
  tags:
    - java-springboot
spec:
  owner: group:Arquitectura
  type: service

  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Datos principales
      required:
        - name
        - description
      properties:
        name:
          title: Nombre
          type: string
          description: Nombre único del componente
          maxLength: 16
          pattern: '^([a-z]*)(-[a-z]+)*$'
          ui:autofocus: true
        description:
          title: Descripción
          type: string
          description: Finalidad y funcionalidad general
    - title: Repositorio destino
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - dev.azure.com
              - github.com
              - gitlab.com
    
        
  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          
    - id: publish
      name: Publish
      action: publish:azure
      input:
        allowedHosts: ['dev.azure.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
  
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'


        
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
