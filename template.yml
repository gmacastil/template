apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: template-java-apache-camel-fuse-api-v1.1
  title: Template Camel Fuse API v1.1
  description: Plantilla para microservicios en RH Fuse mejorado
  tags:
    - java-fuse
spec:
  owner: group:Arquitectura
  type: service

  parameters:
    - title: Datos Repositorio
      required:
        - name
        - description
        - namespace
        - organization
        - projetcc
      properties:
        name:
          title: Nombre Repositorio
          type: string
          description: Nombre único del repositorio
          
        description:
          title: Descripción
          type: string
          description: Finalidad y/o funcionalidad del componente
          
        namespace:
          title: Namespace
          type: string
          description: Nombre del espacio asignado al componente
          enum:
          - namespace_1
          - namespace_2
          - namespace_3
          
        organization:
          title: Organización
          type: string
          description: Organización propietaria del repositorio
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: Group
              spec.type: celula
         
        projetcc:
          title: Proyecto
          type: string
          description: Proyecto al que pertenece el repositorio
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: Group
              spec.type: tren
              
    - title: Datos Azure DevOps
      required:
      - repoUrl
      properties:
       repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - dev.azure.com
          
    - title: Datos Gobierno
      required:
        - channels
        - integration
        - segment
        - product
        - fdomain
        - tservice
        - tad
        - ncad
        - nrad
        - dplatform
      properties:
        tservice:
          title: Tipo Servicio
          type: string
          description: Tipo de servicio desarrollado
          enum:
          - Microservicio
          - Microservicio CronJob
          - Orquestador
          - Orquestador CronJob
          - BFF (Back for Frontend)
          - Frontend
        channels:
          title: Consumidor
          type: string
          description: Componente(s) de origen que consume(n) el servicio
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: Component 
        tad:
          title: Tipo Apuntamiento / Destino
          type: string
          description: Tipo Apuntamiento / Destino con el que se está integrando el desarrollo
          enum:   
          - Componente
          - Recurso
          - Mixto
          
        ncad:
          title: Nombre Componente Apuntamiento / Destino
          type: string
          description: Nombre Componente con el que se está integrando el desarrollo
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: Component
              
        nrad:
          title: Nombre Recurso Apuntamiento / Destino   
          type: string
          description: Nombre Recurso con el que se está integrando el desarrollo
          
        dplatform:
          title: Plataforma Despliegue
          type: string
          description: Plataforma donde se desplegara el servicio
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: Resource
          
        integration:
          title: Integración
          type: string
          description: Servicio se puede reusar o es propietario
          enum:
          - Reuso
          - Sin reuso
          - Reuso con aprobacion
          
        segment:
          title: Segmento
          type: string
          description: Segmento de negocio asociado el servicio
          enum:
          - B2B
          - B2C
          - Convergente
          
        product:
          title: Producto
          type: string
          description: Producto asociado al servicio
          enum:
          - Fijo
          - Movil
          - Convergente
          - Productos Digitales
          - Productos Robustos (B2B)
          
        fdomain:
          title: Dominio Funcional
          type: string
          description: Linea de servicio asociada al componente
          enum:
          - Pagos
          - Recargas
          - Aprovisionamiento
          - Facturacion
          
    - title: Datos Seguridad
      required:
        - criticality
        - cdli
        - cnormative
        - vdi
      properties:
        criticality:
          title: Criticidad
          type: string
          description: Criticidad del activo
          enum:
          - Critico
          - No Critico
          
        cdli:
          title: Clasificación de la Información
          type: string 
          description: Clasificación de la información
          enum:
          - Uso Interno 
          - Publico 
          - Restringido 
          - Reservado
          
        cnormative:
          title: Cumplimiento Normativo
          type: string
          description: Cumplimiento normativo
          enum:
          - Telefonica (Por Defecto)
          - SOX
          - PCI DSS
          
        vdi:
         title: Visibilidad Desde Internet
         type: string
         description: Visibilidad desde internet
         enum:
         - Si
         - No
         

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          description: ${{parameters.description }}
          cell: ${{ parameters.cell }}
          repoUrl: ${{ parameters.repoUrl }}
          segment: ${{ parameters.segment }}
          product: ${{ parameters.product }}
          fdomain: ${{ parameters.fdomain }}
          legacy: ${{ parameters.legacy }}
          integration: ${{ parameters.integration }}
          channels: ${{ parameters.channels }}
          method: ${{ parameters.method }}
   
    - id: publish
      name: Publish
      action: publish:azure
      input:
        allowedHosts: ['dev.azure.com']
        description: This is ${{parameters.name}}
        repoUrl: ${{parameters.repoUrl}}
  
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{steps['publish'].output.repoContentsUrl}}
        catalogInfoPath: '/catalog-info.yaml'
   
    - id: backstage_request
      name: kiuwan
      action: http:backstage:request
      input:
        method: 'POST'
        path: '/proxy/secure-development-reporter'
        headers:
          content-type: 'application/json'
        body:
          urlRepository: ${{ parameters.repoUrl }}
          agileTrain: ${{ parameters.train }}
          agileCell: ${{ parameters.cell }}
          projectName: ${{ parameters.name }}
          microserviceName: ${{ parameters.name }}
          branch: "test"
          internetExposure: ${{ parameters.expose }}
          developmentLanguaje: "java-fuse"
        
  output:
    links:
      - title: Repository
        url: ${{steps['publish'].output.remoteUrl}}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{steps['register'].output.entityRef}}

